{"ast":null,"code":"var _jsxFileName = \"/Users/kenny/Desktop/2022Spring/ista330/Practicum/findnearbyplaces/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../index.css';\nimport Button from 'react-bootstrap/Button';\nimport apiAccess from '../communication/APIAccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n\n  let handleSubmit = event => {\n    //usersData.users.push({ 'name': name, 'email': email, 'password': password });\n    if (validateInputs(email, 'email') && validateInputs(name, 'name') && validateInputs(password, 'password')) {\n      apiAccess.addUser(name, email, password).then(x => {\n        alert(`Thank you for signing up! \\nYou will now be redirected to the login page. `);\n        navigate('/login');\n      }).catch(e => {\n        console.log(e);\n        alert('Registration failed.');\n      });\n    }\n    /*event.preventDefault(); */\n\n  };\n\n  let handleEmail = event => {\n    let val = event.target.value;\n    setEmail(val);\n  };\n\n  let handleName = event => {\n    let val = event.target.value;\n    setName(val);\n  };\n\n  let handlePassword = event => {\n    let val = event.target.value;\n    setPassword(val);\n  };\n\n  let validateInputs = (value, type) => {\n    if (type == 'email') {\n      /* empty value check */\n      if (!value) {\n        alert('Please enter an email');\n        const nameDiv = document.getElementById('emailDiv');\n        nameDiv.setAttribute('style', 'border: 3px solid red');\n        return false;\n      }\n      /* this regex also prevents multiple @ symbols being used in addition to email validation. This regex will return an object if value is true email format. */\n\n\n      if (!value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n        alert('Invalid email');\n        return false;\n      }\n    } else if (type == 'name') {\n      /* empty value check */\n      if (!value) {\n        alert('Please enter a name');\n        const nameDiv = document.getElementById('nameDiv');\n        nameDiv.setAttribute('style', 'border: 3px solid red');\n        return false;\n      }\n\n      if (value.match(/[0-9]/)) {\n        alert('Invalid name');\n        return false;\n      }\n    } else if (type == 'password') {\n      /* empty value check */\n      if (!value) {\n        alert('Please enter a password');\n        const nameDiv = document.getElementById('passwordDiv');\n        nameDiv.setAttribute('style', 'border: 3px solid red');\n        return false;\n      }\n\n      if (value.length < 5) {\n        alert('Password length is too short');\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"container\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"registerForm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            id: \"emailLabel\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            autoComplete: \"email\",\n            value: email,\n            onChange: handleEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            id: \"nameLabel\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: name,\n            onChange: handleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            id: \"passwordLabel\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: password,\n            onChange: handlePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"submitRegister\",\n            size: \"lg\",\n            variant: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Registration, \"X4KRr1+4codU2n84JdnnH8bpbNM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useNavigate","Button","apiAccess","Registration","email","setEmail","name","setName","password","setPassword","navigate","handleSubmit","event","validateInputs","addUser","then","x","alert","catch","e","console","log","handleEmail","val","target","value","handleName","handlePassword","type","nameDiv","document","getElementById","setAttribute","match","length"],"sources":["/Users/kenny/Desktop/2022Spring/ista330/Practicum/findnearbyplaces/src/components/register.js"],"sourcesContent":["import { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../index.css';\nimport Button from 'react-bootstrap/Button';\nimport apiAccess from '../communication/APIAccess';\n\n\nconst Registration = () => {\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    let navigate = useNavigate();\n\n    let handleSubmit = (event) => {\n        //usersData.users.push({ 'name': name, 'email': email, 'password': password });\n        if (validateInputs(email, 'email') && validateInputs(name, 'name') && validateInputs(password, 'password')) {\n            apiAccess.addUser(name, email, password)\n            .then(x => {\n                alert(`Thank you for signing up! \\nYou will now be redirected to the login page. `);\n                navigate('/login');\n            })\n            .catch(e => {\n                console.log(e);\n                alert('Registration failed.');\n            });\n        }\n        /*event.preventDefault(); */\n    }\n\n    let handleEmail = (event) => {\n        let val = event.target.value;\n        setEmail(val);\n    }\n    let handleName = (event) => {\n        let val = event.target.value;\n        setName(val);\n    }\n    let handlePassword = (event) => {\n        let val = event.target.value;\n        setPassword(val);\n    }\n    let validateInputs = (value, type) => {\n        if (type == 'email') {\n            /* empty value check */\n            if (!value) {\n                alert('Please enter an email');\n                const nameDiv = document.getElementById('emailDiv');\n                nameDiv.setAttribute('style', 'border: 3px solid red');\n                return false;\n            }\n            /* this regex also prevents multiple @ symbols being used in addition to email validation. This regex will return an object if value is true email format. */\n            if (!value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n                alert('Invalid email');\n                return false;\n            }\n        } else if (type == 'name') {\n            /* empty value check */\n            if (!value) {\n                alert('Please enter a name');\n                const nameDiv = document.getElementById('nameDiv');\n                nameDiv.setAttribute('style', 'border: 3px solid red');\n                return false;\n            }\n            if (value.match(/[0-9]/)) {\n                alert('Invalid name');\n                return false;\n            }\n        } else if (type == 'password') {\n            /* empty value check */\n            if (!value) {\n                alert('Please enter a password');\n                const nameDiv = document.getElementById('passwordDiv');\n                nameDiv.setAttribute('style', 'border: 3px solid red');\n                return false;\n            }\n            if (value.length < 5) {\n                alert('Password length is too short');\n                return false;\n            }\n        }\n        return true;\n    }\n    return (\n        <div className='container' id='register'>\n            <h1 className='container'>Sign Up</h1>\n            <form id='registerForm' >\n                <div className='row'>\n                    <div className='row'>\n                        <label htmlFor='email' id='emailLabel'>Email: </label>\n                        <input type='text' name='email' id='email' autoComplete='email' value={email} onChange={handleEmail} />\n                    </div>\n                    <div className='row'>\n                        <label htmlFor='name' id='nameLabel'>Name: </label>\n                        <input type='text' name='name' id='name' value={name} onChange={handleName} />\n                    </div>\n                    <div className='row'>\n                        <label htmlFor='password' id='passwordLabel'>Password: </label>\n                        <input type='password' name='password' id='password' autoComplete='current-password' value={password} onChange={handlePassword} />\n                    </div>\n                    <div className='row'>\n                        <Button id='submitRegister' size='lg' variant='primary' onClick={handleSubmit}>Submit</Button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Registration;"],"mappings":"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"},"metadata":{},"sourceType":"module"}