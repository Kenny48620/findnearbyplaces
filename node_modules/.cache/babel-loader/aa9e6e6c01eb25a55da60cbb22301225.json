{"ast":null,"code":"let backendAddress = \"https://jnhenkel-findnearbyplaces.herokuapp.com\";\nlet apiAccess = {\n  addUser: (name, email, password) => {\n    return fetch(`${backendAddress}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(x => x.json()).then(x => {\n      //console.log(x);\n      return x;\n    });\n  },\n  login: (email, password) => {\n    return fetch(`${backendAddress}/login`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(x => x.json()).then(x => {\n      //console.log(x);\n      return x;\n    });\n  },\n  logout: () => {\n    return fetch(`${backendAddress}/logout`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    }).then(x => x.json()).then(x => {\n      return x;\n    });\n  },\n  search: (search_term, user_location, radius_filter, maximum_results_to_return, category_filter, sort) => {\n    return fetch(`${backendAddress}/search/${search_term}/${user_location}/${radius_filter}/${maximum_results_to_return}/${category_filter}/${sort}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    }).then(x => x.json()).then(x => {\n      return x;\n    });\n  }\n};\nexport default apiAccess;","map":{"version":3,"names":["backendAddress","apiAccess","addUser","name","email","password","fetch","method","headers","body","JSON","stringify","then","x","json","login","credentials","logout","search","search_term","user_location","radius_filter","maximum_results_to_return","category_filter","sort"],"sources":["/Users/kenny/Desktop/2022Spring/ista330/Practicum/findnearbyplaces/src/communication/APIAccess.js"],"sourcesContent":["let backendAddress = \"https://jnhenkel-findnearbyplaces.herokuapp.com\";\n\nlet apiAccess = {\n    addUser: (name, email, password) => {\n        return fetch(`${backendAddress}/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ name, email, password })\n        })\n            .then(x => x.json())\n            .then(x => {\n                //console.log(x);\n                return x;\n            })\n    },\n\n    login: (email, password) => {\n        return fetch(`${backendAddress}/login`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(x => x.json())\n            .then(x => {\n                //console.log(x);\n                return x;\n            })\n    },\n\n    logout: () => {\n        return fetch(`${backendAddress}/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n            .then(x => x.json())\n            .then(x => {\n                return x;\n            })\n    },\n\n    search: (search_term, user_location, radius_filter, maximum_results_to_return, category_filter, sort) => {\n        return fetch(`${backendAddress}/search/${search_term}/${user_location}/${radius_filter}/${maximum_results_to_return}/${category_filter}/${sort}`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(x => x.json())\n        .then(x => {\n            return x;\n        })\n    }\n};\n\nexport default apiAccess;"],"mappings":"AAAA,IAAIA,cAAc,GAAG,iDAArB;AAEA,IAAIC,SAAS,GAAG;EACZC,OAAO,EAAE,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;IAChC,OAAOC,KAAK,CAAE,GAAEN,cAAe,WAAnB,EAA+B;MACvCO,MAAM,EAAE,MAD+B;MAEvCC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF8B;MAKvCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAER,IAAF;QAAQC,KAAR;QAAeC;MAAf,CAAf;IALiC,CAA/B,CAAL,CAOFO,IAPE,CAOGC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPR,EAQFF,IARE,CAQGC,CAAC,IAAI;MACP;MACA,OAAOA,CAAP;IACH,CAXE,CAAP;EAYH,CAdW;EAgBZE,KAAK,EAAE,CAACX,KAAD,EAAQC,QAAR,KAAqB;IACxB,OAAOC,KAAK,CAAE,GAAEN,cAAe,QAAnB,EAA4B;MACpCO,MAAM,EAAE,MAD4B;MAEpCS,WAAW,EAAE,SAFuB;MAGpCR,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,oCAAoC;MAF/B,CAH2B;MAOpCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEP,KAAF;QAASC;MAAT,CAAf;IAP8B,CAA5B,CAAL,CASFO,IATE,CASGC,CAAC,IAAIA,CAAC,CAACC,IAAF,EATR,EAUFF,IAVE,CAUGC,CAAC,IAAI;MACP;MACA,OAAOA,CAAP;IACH,CAbE,CAAP;EAcH,CA/BW;EAiCZI,MAAM,EAAE,MAAM;IACV,OAAOX,KAAK,CAAE,GAAEN,cAAe,SAAnB,EAA6B;MACrCO,MAAM,EAAE,MAD6B;MAErCS,WAAW,EAAE,SAFwB;MAGrCR,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,oCAAoC;MAF/B;IAH4B,CAA7B,CAAL,CAQFI,IARE,CAQGC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARR,EASFF,IATE,CASGC,CAAC,IAAI;MACP,OAAOA,CAAP;IACH,CAXE,CAAP;EAYH,CA9CW;EAgDZK,MAAM,EAAE,CAACC,WAAD,EAAcC,aAAd,EAA6BC,aAA7B,EAA4CC,yBAA5C,EAAuEC,eAAvE,EAAwFC,IAAxF,KAAiG;IACrG,OAAOlB,KAAK,CAAE,GAAEN,cAAe,WAAUmB,WAAY,IAAGC,aAAc,IAAGC,aAAc,IAAGC,yBAA0B,IAAGC,eAAgB,IAAGC,IAAK,EAAnI,EAAsI;MAC9IjB,MAAM,EAAE,KADsI;MAE9IS,WAAW,EAAE,SAFiI;MAG9IR,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,oCAAoC;MAF/B;IAHqI,CAAtI,CAAL,CAQNI,IARM,CAQDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARJ,EASNF,IATM,CASDC,CAAC,IAAI;MACP,OAAOA,CAAP;IACH,CAXM,CAAP;EAYH;AA7DW,CAAhB;AAgEA,eAAeZ,SAAf"},"metadata":{},"sourceType":"module"}