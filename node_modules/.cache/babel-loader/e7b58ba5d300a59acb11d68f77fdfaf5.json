{"ast":null,"code":"let backendAddress = 'https://shyambhavi3-findnearbyplaces.herokuapp.com';\nlet apiAccess = {\n  addCustomer: (email, password) => {\n    return fetch(`${backendAddress}/register`, {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  login: (email, password) => {\n    return fetch(`${backendAddress}/login`, {\n      method: 'Post',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  logout: (email, password) => {\n    return fetch(`${backendAddress}/logout`, {\n      method: 'Post',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  getCategory: () => {\n    return fetch(`${backendAddress}/category/`, {\n      method: 'Get',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(x => x.json()).then(x => {\n      return x;\n    });\n  },\n  addCategory: name => {\n    return fetch(`${backendAddress}/category`, {\n      method: 'Post',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        name\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  addPlace: (name, category_id, latitude, longitude, description) => {\n    return fetch(`${backendAddress}/place`, {\n      method: 'Post',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        name,\n        category_id,\n        latitude,\n        longitude,\n        description\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  addReview: (place_id, comment, rating) => {\n    return fetch(`${backendAddress}/review`, {\n      method: 'Post',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        place_id,\n        comment,\n        rating\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  getReview: id => {\n    return fetch(`${backendAddress}/review/${id}`, {\n      method: 'Get',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(x => x.json()).then(x => {\n      return x;\n    });\n  },\n  saveImage: formData => {\n    console.log(formData);\n    return fetch(`${backendAddress}/photo`, {\n      method: 'POST',\n      body: formData\n    }).then(x => x.json());\n  },\n  updateImage: formData => {\n    console.log(formData.get('file'));\n    return fetch(`${backendAddress}/photo`, {\n      method: 'put',\n      credentials: 'include',\n      body: formData\n    }).then(x => x.json());\n  },\n  search: (search_term, user_location, radius_filter, maximum_results, category_filter, sort) => {\n    return fetch(`${backendAddress}/search/${search_term}/${user_location}/${radius_filter}/${maximum_results}/${category_filter}/${sort}`, {\n      method: 'Get',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x.result;\n    });\n  },\n  updatePlace: (place_id, name, category_id, latitude, longitude, description) => {\n    return fetch(`${backendAddress}/place`, {\n      method: 'Put',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      },\n      body: JSON.stringify({\n        place_id,\n        name,\n        category_id,\n        latitude,\n        longitude,\n        description\n      })\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  },\n  deletePlace: place_id => {\n    return fetch(`${backendAddress}/place/${place_id}`, {\n      method: 'delete',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': true\n      }\n    }).then(x => x.json()).then(x => {\n      console.log(x);\n      return x;\n    });\n  }\n};\nexport default apiAccess;","map":{"version":3,"names":["backendAddress","apiAccess","addCustomer","email","password","fetch","method","headers","body","JSON","stringify","then","x","json","console","log","login","credentials","logout","getCategory","addCategory","name","addPlace","category_id","latitude","longitude","description","addReview","place_id","comment","rating","getReview","id","saveImage","formData","updateImage","get","search","search_term","user_location","radius_filter","maximum_results","category_filter","sort","result","updatePlace","deletePlace"],"sources":["/Users/kenny/Desktop/2022Spring/ista330/Practicum/findnearbyplaces/src/components/communication/apiAccess.js"],"sourcesContent":["let backendAddress = 'https://shyambhavi3-findnearbyplaces.herokuapp.com';\n\nlet apiAccess = {\n    addCustomer: (email, password) => {\n        return fetch(`${backendAddress}/register`, {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n\n    },\n    login: (email, password) => {\n        return fetch(`${backendAddress}/login`, {\n            method: 'Post',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n    },\n\n    logout: (email, password) => {\n        return fetch(`${backendAddress}/logout`, {\n            method: 'Post',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n    },\n\n    getCategory: () => {\n        return fetch(`${backendAddress}/category/`, {\n            method: 'Get',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Credentials\": true\n            },\n        })\n            .then(x => x.json())\n            .then(x => {\n\n                return x;\n            });\n    },\n\n    addCategory: (name) => {\n        return fetch(`${backendAddress}/category`, {\n            method: 'Post',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({ name })\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n    },\n\n    addPlace: (name, category_id, latitude, longitude, description) => {\n        return fetch(`${backendAddress}/place`, {\n            method: 'Post',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({ name, category_id, latitude, longitude, description })\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n\n    }\n\n    ,\n\n    addReview: (place_id,comment,rating) => {\n        return fetch(`${backendAddress}/review`, {\n            method: 'Post',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({ place_id,comment,rating})\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n\n    },\n    getReview: (id) => {\n        return fetch(`${backendAddress}/review/${id}`, {\n            method: 'Get',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Credentials\": true\n            },\n        })\n            .then(x => x.json())\n            .then(x => {\n\n                return x;\n            });\n    }\n\n    ,\n    saveImage: (formData) => {\n        console.log(formData)\n        return fetch(`${backendAddress}/photo`, {\n            method: 'POST',\n            body: formData\n        })\n            .then(x => x.json());\n    },\n\n    updateImage: (formData) => {\n        console.log(formData.get('file'))\n        return fetch(`${backendAddress}/photo`, {\n            method: 'put',\n            credentials: 'include',\n            body: formData\n        })\n            .then(x => x.json());\n    },\n\n    search:(search_term, user_location, radius_filter, maximum_results, category_filter, sort)=>{\n        return fetch(`${backendAddress}/search/${search_term}/${user_location}/${radius_filter}/${maximum_results}/${category_filter}/${sort}`, {\n            method: 'Get',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"Access-Control-Allow-Credentials\": true\n            },\n         })\n        .then(x => x.json())\n        .then(x => {\n            console.log(x);\n            \n            return x.result;\n        });\n    },\n\n    updatePlace:(place_id, name, category_id, latitude, longitude, description)=>{\n        return fetch(`${backendAddress}/place`, {\n            method: 'Put',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n            body: JSON.stringify({place_id, name, category_id, latitude, longitude, description})\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n\n        \n\n    },\n\n    deletePlace:(place_id)=>{\n        return fetch(`${backendAddress}/place/${place_id}`, {\n            method: 'delete',\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n            .then(x => x.json())\n            .then(x => {\n                console.log(x);\n                return x;\n            });\n\n        \n\n    }\n\n\n\n};\n\n\nexport default apiAccess;"],"mappings":"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"},"metadata":{},"sourceType":"module"}